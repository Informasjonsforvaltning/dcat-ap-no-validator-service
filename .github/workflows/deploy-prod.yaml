name: Deploy to production

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    name: Build,test, publish and deploy to production environment
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Auth gcloud CLI for image-store
        uses: google-github-actions/auth@main
        with:
          credentials_json: ${{ secrets.GCP_SA_DIGDIR_FDK_GCR_KEY }}

      - name: Configure docker to use the gcloud command-line tool as a credential helper
        run: gcloud auth configure-docker eu.gcr.io

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: .cache
          key: ${{ runner.os }}-nox-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-nox-

      - name: Set up Python 3.9
        uses: actions/setup-python@v1
        with:
          python-version: 3.9
          architecture: x64

      - name: Install dependencies
        run: |
          pip install --constraint=.github/workflows/constraints.txt pip
          pipx install --pip-args=--constraint=.github/workflows/constraints.txt poetry
          pipx install --pip-args=--constraint=.github/workflows/constraints.txt nox
          pipx inject --pip-args=--constraint=.github/workflows/constraints.txt nox nox-poetry

      - name: Build image and test with nox
        run: nox

      - name: Tag and publish docker image to Google Cloud
        run: |
          docker tag eu.gcr.io/digdir-fdk-infra/dcat-ap-no-validator-service:test eu.gcr.io/digdir-fdk-infra/dcat-ap-no-validator-service:$GITHUB_SHA
          docker tag eu.gcr.io/digdir-fdk-infra/dcat-ap-no-validator-service:test eu.gcr.io/digdir-fdk-infra/dcat-ap-no-validator-service:latest
          docker rmi eu.gcr.io/digdir-fdk-infra/dcat-ap-no-validator-service:test
          docker -- push eu.gcr.io/digdir-fdk-infra/dcat-ap-no-validator-service -a

      - name: Apply Helm template
        run: |
          helm repo add fdk https://informasjonsforvaltning.github.io/helm-chart/
          helm fetch --untar --untardir ./helm fdk/dcat-ap-no-validator-service
          helm template --set DOCKER_IMAGE_NAME="eu.gcr.io/digdir-fdk-infra/dcat-ap-no-validator-service:$GITHUB_SHA" \
          -f ./helm/dcat-ap-no-validator-service/values/prod.yaml \
          ./helm/dcat-ap-no-validator-service/ > ./kubectlapply.yaml
          chmod o+w ./kubectlapply.yaml
          cat kubectlapply.yaml

      - name: Auth gcloud CLI for deploy
        uses: google-github-actions/auth@main
        with:
          credentials_json: ${{ secrets.DIGDIR_FDK_PROD_AUTODEPLOY }}

      - name: Deploy to GCP
        run: |
          gcloud container clusters get-credentials digdir-fdk-prod --region europe-north1-a --project digdir-fdk-prod
          kubectl apply -f ./kubectlapply.yaml --force
          if ! kubectl --namespace=prod rollout status deployment dcat-ap-no-validator-service; then
            kubectl --namespace=prod rollout undo deployment dcat-ap-no-validator-service
            kubectl --namespace=prod rollout status deployment dcat-ap-no-validator-service
            exit 1
          fi

      - name: Notify slack
        uses: 8398a7/action-slack@v3
        with:
          mention: "channel"
          if_mention: failure
          status: ${{ job.status }}
          author_name: "Application: dcat-ap-no-validator-service | Environment: prod"
          fields: commit,author,workflow,message
        env:
          GITHUB_TOKEN: ${{ github.token }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()

      - name: Trigger deploy to demo
        uses: peter-evans/repository-dispatch@main
        with:
          token: ${{ secrets.DISPATCH_TOKEN }}
          event-type: deploy-demo
          client-payload: '{"sha": "${{ github.sha }}"}'
